{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useSelector,useDispatch}from'react-redux';import{addCardMember}from'../../actions/board';import{Checkbox,FormGroup,FormControlLabel,FormControl}from'@material-ui/core';import useStyles from'../../utils/modalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardMembers=function CardMembers(_ref){var card=_ref.card;var classes=useStyles();var boardMembers=useSelector(function(state){return state.board.board.members;});var members=card.members.map(function(member){return member.user;});var dispatch=useDispatch();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:classes.membersTitle,children:\"Members\"}),/*#__PURE__*/_jsx(FormControl,{component:\"fieldset\",children:/*#__PURE__*/_jsx(FormGroup,{children:boardMembers.map(function(member){return/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:members.indexOf(member.user)!==-1,onChange:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",dispatch(addCardMember({add:e.target.checked,cardId:card._id,userId:e.target.name})));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),name:member.user}),label:member.name},member.user);})})})]});};export default CardMembers;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/card/CardMembers.js"],"names":["React","useSelector","useDispatch","addCardMember","Checkbox","FormGroup","FormControlLabel","FormControl","useStyles","CardMembers","card","classes","boardMembers","state","board","members","map","member","user","dispatch","membersTitle","indexOf","e","add","target","checked","cardId","_id","userId","name"],"mappings":"2XAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,aAAT,KAA8B,qBAA9B,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,gBAA9B,CAAgDC,WAAhD,KAAmE,mBAAnE,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAChC,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,GAAMI,CAAAA,YAAY,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,OAA7B,EAAD,CAAhC,CACA,GAAMA,CAAAA,OAAO,CAAGL,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAnB,EAAjB,CAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEA,mBACE,oCACE,WAAI,SAAS,CAAES,OAAO,CAACS,YAAvB,qBADF,cAEE,KAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,uBACE,KAAC,SAAD,WACGR,YAAY,CAACI,GAAb,CAAiB,SAACC,MAAD,qBAChB,KAAC,gBAAD,EAEE,OAAO,cACL,KAAC,QAAD,EACE,OAAO,CAAEF,OAAO,CAACM,OAAR,CAAgBJ,MAAM,CAACC,IAAvB,IAAiC,CAAC,CAD7C,CAEE,QAAQ,2FAAE,iBAAOI,CAAP,kJACRH,QAAQ,CACNhB,aAAa,CAAC,CACZoB,GAAG,CAAED,CAAC,CAACE,MAAF,CAASC,OADF,CAEZC,MAAM,CAAEhB,IAAI,CAACiB,GAFD,CAGZC,MAAM,CAAEN,CAAC,CAACE,MAAF,CAASK,IAHL,CAAD,CADP,CADA,wDAAF,+DAFV,CAWE,IAAI,CAAEZ,MAAM,CAACC,IAXf,EAHJ,CAiBE,KAAK,CAAED,MAAM,CAACY,IAjBhB,EACOZ,MAAM,CAACC,IADd,CADgB,EAAjB,CADH,EADF,EAFF,GADF,CA8BD,CApCD,CA0CA,cAAeT,CAAAA,WAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addCardMember } from '../../actions/board';\r\nimport { Checkbox, FormGroup, FormControlLabel, FormControl } from '@material-ui/core';\r\nimport useStyles from '../../utils/modalStyles';\r\n\r\nconst CardMembers = ({ card }) => {\r\n  const classes = useStyles();\r\n  const boardMembers = useSelector((state) => state.board.board.members);\r\n  const members = card.members.map((member) => member.user);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={classes.membersTitle}>Members</h3>\r\n      <FormControl component='fieldset'>\r\n        <FormGroup>\r\n          {boardMembers.map((member) => (\r\n            <FormControlLabel\r\n              key={member.user}\r\n              control={\r\n                <Checkbox\r\n                  checked={members.indexOf(member.user) !== -1}\r\n                  onChange={async (e) =>\r\n                    dispatch(\r\n                      addCardMember({\r\n                        add: e.target.checked,\r\n                        cardId: card._id,\r\n                        userId: e.target.name,\r\n                      })\r\n                    )\r\n                  }\r\n                  name={member.user}\r\n                />\r\n              }\r\n              label={member.name}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardMembers.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CardMembers;\r\n"]},"metadata":{},"sourceType":"module"}