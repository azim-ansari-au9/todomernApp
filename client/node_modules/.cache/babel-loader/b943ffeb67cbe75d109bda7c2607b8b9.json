{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZIM ANSARI\\\\Desktop\\\\azim-ansari-au9\\\\fprtTest\\\\fprtMERNAPP\\\\client\\\\src\\\\components\\\\board\\\\ArchivedCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { archiveCard, deleteCard } from '../../actions/board';\nimport { Card, List, ListItem, CardContent, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArchivedCards = () => {\n  _s();\n\n  const cards = useSelector(state => state.board.board.cardObjects);\n  const lists = useSelector(state => state.board.board.listObjects);\n  const dispatch = useDispatch();\n\n  const onDelete = async (listId, cardId) => {\n    dispatch(deleteCard(listId, cardId));\n  };\n\n  const onSendBack = async cardId => {\n    dispatch(archiveCard(cardId, false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: cards.filter(card => card.archived).map((card, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"archived-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: () => onDelete(lists.find(list => list.cards.includes(card._id))._id, card._id),\n            children: \"Delete Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => onSendBack(card._id),\n            children: \"Send to List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArchivedCards, \"8v/XpeWKfusiUcFQ936oXzRSh1w=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ArchivedCards;\nexport default ArchivedCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArchivedCards\");","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/board/ArchivedCards.js"],"names":["React","useSelector","useDispatch","archiveCard","deleteCard","Card","List","ListItem","CardContent","Button","ArchivedCards","cards","state","board","cardObjects","lists","listObjects","dispatch","onDelete","listId","cardId","onSendBack","filter","card","archived","map","index","title","find","list","includes","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,qBAAxC;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,WAA/B,EAA4CC,MAA5C,QAA0D,mBAA1D;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,WAA9B,CAAzB;AACA,QAAMC,KAAK,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBG,WAA9B,CAAzB;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,QAAQ,GAAG,OAAOC,MAAP,EAAeC,MAAf,KAA0B;AACzCH,IAAAA,QAAQ,CAACb,UAAU,CAACe,MAAD,EAASC,MAAT,CAAX,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAOD,MAAP,IAAkB;AACnCH,IAAAA,QAAQ,CAACd,WAAW,CAACiB,MAAD,EAAS,KAAT,CAAZ,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,gBACGT,KAAK,CACHW,MADF,CACUC,IAAD,IAAUA,IAAI,CAACC,QADxB,EAEEC,GAFF,CAEM,CAACF,IAAD,EAAOG,KAAP,kBACH,QAAC,QAAD;AAAsB,QAAA,SAAS,EAAC,eAAhC;AAAA,gCACE,QAAC,IAAD;AAAA,iCACE,QAAC,WAAD;AAAA,sBAAcH,IAAI,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,KAAK,EAAC,WADR;AAEE,YAAA,OAAO,EAAE,MACPT,QAAQ,CACNH,KAAK,CAACa,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAAClB,KAAL,CAAWmB,QAAX,CAAoBP,IAAI,CAACQ,GAAzB,CAArB,EAAoDA,GAD9C,EAENR,IAAI,CAACQ,GAFC,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMV,UAAU,CAACE,IAAI,CAACQ,GAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAeL,KAAf;AAAA;AAAA;AAAA;AAAA,cAHH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA1CD;;GAAMhB,a;UACUT,W,EACAA,W,EACGC,W;;;KAHbQ,a;AA4CN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { archiveCard, deleteCard } from '../../actions/board';\r\n\r\nimport { Card, List, ListItem, CardContent, Button } from '@material-ui/core';\r\n\r\nconst ArchivedCards = () => {\r\n  const cards = useSelector((state) => state.board.board.cardObjects);\r\n  const lists = useSelector((state) => state.board.board.listObjects);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = async (listId, cardId) => {\r\n    dispatch(deleteCard(listId, cardId));\r\n  };\r\n\r\n  const onSendBack = async (cardId) => {\r\n    dispatch(archiveCard(cardId, false));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {cards\r\n          .filter((card) => card.archived)\r\n          .map((card, index) => (\r\n            <ListItem key={index} className='archived-card'>\r\n              <Card>\r\n                <CardContent>{card.title}</CardContent>\r\n              </Card>\r\n              <div>\r\n                <Button\r\n                  color='secondary'\r\n                  onClick={() =>\r\n                    onDelete(\r\n                      lists.find((list) => list.cards.includes(card._id))._id,\r\n                      card._id\r\n                    )\r\n                  }\r\n                >\r\n                  Delete Card\r\n                </Button>\r\n                <Button onClick={() => onSendBack(card._id)}>Send to List</Button>\r\n              </div>\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchivedCards;\r\n"]},"metadata":{},"sourceType":"module"}