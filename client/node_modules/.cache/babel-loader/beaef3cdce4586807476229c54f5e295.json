{"ast":null,"code":"import _objectSpread from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{Redirect}from'react-router-dom';import{DragDropContext,Droppable}from'react-beautiful-dnd';import{getBoard,moveCard,moveList}from'../../actions/board';import{CircularProgress,Box}from'@material-ui/core';import BoardTitle from'../board/BoardTitle';import BoardDrawer from'../board/BoardDrawer';import List from'../list/List';import CreateList from'../board/CreateList';import Navbar from'../other/Navbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Board=function Board(_ref){var match=_ref.match;var board=useSelector(function(state){return state.board.board;});var isAuthenticated=useSelector(function(state){return state.auth.isAuthenticated;});var dispatch=useDispatch();useEffect(function(){dispatch(getBoard(match.params.id));},[dispatch,match.params.id]);useEffect(function(){if(board===null||board===void 0?void 0:board.title)document.title=board.title+' | TODO';},[board===null||board===void 0?void 0:board.title]);if(!isAuthenticated){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}var onDragEnd=function onDragEnd(result){var source=result.source,destination=result.destination,draggableId=result.draggableId,type=result.type;if(!destination){return;}if(type==='card'){dispatch(moveCard(draggableId,{fromId:source.droppableId,toId:destination.droppableId,toIndex:destination.index}));}else{dispatch(moveList(draggableId,{toIndex:destination.index}));}};return!board?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Box,{className:\"board-loading\",children:/*#__PURE__*/_jsx(CircularProgress,{})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"board-and-navbar\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"section\",{className:\"board\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-top\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-top-left\",children:/*#__PURE__*/_jsx(BoardTitle,{board:board})}),/*#__PURE__*/_jsx(BoardDrawer,{})]}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsx(Droppable,{droppableId:\"all-lists\",direction:\"horizontal\",type:\"list\",children:function children(provided){return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:\"lists\",ref:provided.innerRef},provided.droppableProps),{},{children:[board.lists.map(function(listId,index){return/*#__PURE__*/_jsx(List,{listId:listId,index:index},listId);}),provided.placeholder,/*#__PURE__*/_jsx(CreateList,{})]}));}})})]})]});};export default Board;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/pages/Board.js"],"names":["React","Fragment","useEffect","useSelector","useDispatch","Redirect","DragDropContext","Droppable","getBoard","moveCard","moveList","CircularProgress","Box","BoardTitle","BoardDrawer","List","CreateList","Navbar","Board","match","board","state","isAuthenticated","auth","dispatch","params","id","title","document","onDragEnd","result","source","destination","draggableId","type","fromId","droppableId","toId","toIndex","index","provided","innerRef","droppableProps","lists","map","listId","placeholder"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,eAAT,CAA0BC,SAA1B,KAA2C,qBAA3C,CACA,OAASC,QAAT,CAAmBC,QAAnB,CAA6BC,QAA7B,KAA6C,qBAA7C,CACA,OAASC,gBAAT,CAA2BC,GAA3B,KAAsC,mBAAtC,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC3B,GAAMC,CAAAA,KAAK,CAAGjB,WAAW,CAAC,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAN,CAAYA,KAAvB,EAAD,CAAzB,CACA,GAAME,CAAAA,eAAe,CAAGnB,WAAW,CAAC,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACE,IAAN,CAAWD,eAAtB,EAAD,CAAnC,CACA,GAAME,CAAAA,QAAQ,CAAGpB,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACdsB,QAAQ,CAAChB,QAAQ,CAACW,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAT,CAAR,CACD,CAFQ,CAEN,CAACF,QAAD,CAAWL,KAAK,CAACM,MAAN,CAAaC,EAAxB,CAFM,CAAT,CAIAxB,SAAS,CAAC,UAAM,CACd,GAAIkB,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEO,KAAX,CAAkBC,QAAQ,CAACD,KAAT,CAAiBP,KAAK,CAACO,KAAN,CAAc,SAA/B,CACnB,CAFQ,CAEN,CAACP,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEO,KAAR,CAFM,CAAT,CAIA,GAAI,CAACL,eAAL,CAAsB,CACpB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAP,CACD,CAED,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,IACpBC,CAAAA,MADoB,CACuBD,MADvB,CACpBC,MADoB,CACZC,WADY,CACuBF,MADvB,CACZE,WADY,CACCC,WADD,CACuBH,MADvB,CACCG,WADD,CACcC,IADd,CACuBJ,MADvB,CACcI,IADd,CAE5B,GAAI,CAACF,WAAL,CAAkB,CAChB,OACD,CACD,GAAIE,IAAI,GAAK,MAAb,CAAqB,CACnBV,QAAQ,CACNf,QAAQ,CAACwB,WAAD,CAAc,CACpBE,MAAM,CAAEJ,MAAM,CAACK,WADK,CAEpBC,IAAI,CAAEL,WAAW,CAACI,WAFE,CAGpBE,OAAO,CAAEN,WAAW,CAACO,KAHD,CAAd,CADF,CAAR,CAOD,CARD,IAQO,CACLf,QAAQ,CAACd,QAAQ,CAACuB,WAAD,CAAc,CAAEK,OAAO,CAAEN,WAAW,CAACO,KAAvB,CAAd,CAAT,CAAR,CACD,CACF,CAhBD,CAkBA,MAAO,CAACnB,KAAD,cACL,MAAC,QAAD,yBACE,KAAC,MAAD,IADF,cAEE,KAAC,GAAD,EAAK,SAAS,CAAC,eAAf,uBACE,KAAC,gBAAD,IADF,EAFF,GADK,cAQL,aAAK,SAAS,CAAC,kBAAf,wBACE,KAAC,MAAD,IADF,cAEE,iBAAS,SAAS,CAAC,OAAnB,wBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,KAAC,UAAD,EAAY,KAAK,CAAEA,KAAnB,EADF,EADF,cAIE,KAAC,WAAD,IAJF,GADF,cAOE,KAAC,eAAD,EAAiB,SAAS,CAAES,SAA5B,uBACE,KAAC,SAAD,EAAW,WAAW,CAAC,WAAvB,CAAmC,SAAS,CAAC,YAA7C,CAA0D,IAAI,CAAC,MAA/D,UACG,kBAACW,QAAD,qBACC,yCAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEA,QAAQ,CAACC,QAArC,EAAmDD,QAAQ,CAACE,cAA5D,gBACGtB,KAAK,CAACuB,KAAN,CAAYC,GAAZ,CAAgB,SAACC,MAAD,CAASN,KAAT,qBACf,KAAC,IAAD,EAAmB,MAAM,CAAEM,MAA3B,CAAmC,KAAK,CAAEN,KAA1C,EAAWM,MAAX,CADe,EAAhB,CADH,CAIGL,QAAQ,CAACM,WAJZ,cAKE,KAAC,UAAD,IALF,IADD,EADH,EADF,EAPF,GAFF,GARF,CAiCD,CApED,CAsEA,cAAe5B,CAAAA,KAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { getBoard, moveCard, moveList } from '../../actions/board';\r\nimport { CircularProgress, Box } from '@material-ui/core';\r\nimport BoardTitle from '../board/BoardTitle';\r\nimport BoardDrawer from '../board/BoardDrawer';\r\nimport List from '../list/List';\r\nimport CreateList from '../board/CreateList';\r\nimport Navbar from '../other/Navbar';\r\n\r\nconst Board = ({ match }) => {\r\n  const board = useSelector((state) => state.board.board);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBoard(match.params.id));\r\n  }, [dispatch, match.params.id]);\r\n\r\n  useEffect(() => {\r\n    if (board?.title) document.title = board.title + ' | TODO';\r\n  }, [board?.title]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId, type } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (type === 'card') {\r\n      dispatch(\r\n        moveCard(draggableId, {\r\n          fromId: source.droppableId,\r\n          toId: destination.droppableId,\r\n          toIndex: destination.index,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(moveList(draggableId, { toIndex: destination.index }));\r\n    }\r\n  };\r\n\r\n  return !board ? (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Box className='board-loading'>\r\n        <CircularProgress />\r\n      </Box>\r\n    </Fragment>\r\n  ) : (\r\n    <div className='board-and-navbar'>\r\n      <Navbar />\r\n      <section className='board'>\r\n        <div className='board-top'>\r\n          <div className='board-top-left'>\r\n            <BoardTitle board={board} />\r\n          </div>\r\n          <BoardDrawer />\r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId='all-lists' direction='horizontal' type='list'>\r\n            {(provided) => (\r\n              <div className='lists' ref={provided.innerRef} {...provided.droppableProps}>\r\n                {board.lists.map((listId, index) => (\r\n                  <List key={listId} listId={listId} index={index} />\r\n                ))}\r\n                {provided.placeholder}\r\n                <CreateList />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}