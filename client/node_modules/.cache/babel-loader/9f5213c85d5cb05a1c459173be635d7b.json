{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Moment from 'react-moment';\n// import Drawer from '@material-ui/core/Drawer';\n// import List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\n// import Button from '@material-ui/core/Button';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import CloseIcon from '@material-ui/icons/Close';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ArchiveIcon from '@material-ui/icons/Archive';\n// import ArchivedLists from './ArchivedLists';\n// import ArchivedCards from './ArchivedCards';\n// import useStyles from '../../utils/allStyles';\n// const BoardDrawer = () => {\n//   const classes = useStyles();\n//   const [open, setOpen] = useState(false);\n//   const [viewingArchivedLists, setViewingArchivedLists] = useState(false);\n//   const [viewingArchivedCards, setViewingArchivedCards] = useState(false);\n//   const [activityChunks, setActivityChunks] = useState(1);\n//   const activity = useSelector((state) => state.board.board.activity);\n//   const handleClose = () => {\n//     setOpen(false);\n//     setActivityChunks(1);\n//   };\n//   return (\n//     <div>\n//       <Drawer\n//         className={open ? classes.drawer : classes.hide}\n//         variant='persistent'\n//         anchor='right'\n//         open={open}\n//         classes={{\n//           paper: classes.drawerPaper,\n//         }}\n//       >\n//         {!viewingArchivedLists && !viewingArchivedCards ? (\n//           <div>\n//             <div className={classes.drawerHeader}>\n//               <h3>Menu</h3>\n//               <Button onClick={handleClose}>\n//                 <CloseIcon />\n//               </Button>\n//             </div>\n//             <Divider />\n//             <List>\n//               <ListItem button onClick={() => setViewingArchivedLists(true)}>\n//                 <ListItemIcon>\n//                   <ArchiveIcon />\n//                 </ListItemIcon>\n//                 <ListItemText primary={'Archived Lists'} />\n//               </ListItem>\n//               <ListItem button onClick={() => setViewingArchivedCards(true)}>\n//                 <ListItemIcon>\n//                   <ArchiveIcon />\n//                 </ListItemIcon>\n//                 <ListItemText primary={'Archived Cards'} />\n//               </ListItem>\n//             </List>\n//             <Divider />\n//             <div className={classes.activityTitle}>\n//               <h3>Activity</h3>\n//             </div>\n//             <List>\n//               {activity.slice(0, activityChunks * 10).map((activity) => (\n//                 <ListItem key={activity._id}>\n//                   <ListItemText\n//                     primary={activity.text}\n//                     secondary={<Moment fromNow>{activity.date}</Moment>}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n//             <div className={classes.viewMoreActivityButton}>\n//               <Button\n//                 disabled={activityChunks * 10 > activity.length}\n//                 onClick={() => setActivityChunks(activityChunks + 1)}\n//               >\n//                 View More Activity\n//               </Button>\n//             </div>\n//           </div>\n//         ) : viewingArchivedLists ? (\n//           <div>\n//             <div className={classes.drawerHeader}>\n//               <Button onClick={() => setViewingArchivedLists(false)}>\n//                 <ChevronLeftIcon />\n//               </Button>\n//               <h3>Archived Lists</h3>\n//               <Button onClick={handleClose}>\n//                 <CloseIcon />\n//               </Button>\n//             </div>\n//             <Divider />\n//             <ArchivedLists />\n//           </div>\n//         ) : (\n//           <div>\n//             <div className={classes.drawerHeader}>\n//               <Button onClick={() => setViewingArchivedCards(false)}>\n//                 <ChevronLeftIcon />\n//               </Button>\n//               <h3>Archived Cards</h3>\n//               <Button onClick={handleClose}>\n//                 <CloseIcon />\n//               </Button>\n//             </div>\n//             <Divider />\n//             <ArchivedCards />\n//           </div>\n//         )}\n//         <Divider />\n//       </Drawer>\n//     </div>\n//   );\n// };\n// export default BoardDrawer;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/board/BoardDrawer.js"],"names":[],"mappingssourcesContent":["// import React, { useState } from 'react';\r\n// import { useSelector } from 'react-redux';\r\n// import Moment from 'react-moment';\r\n\r\n// import Drawer from '@material-ui/core/Drawer';\r\n// import List from '@material-ui/core/List';\r\n// import Divider from '@material-ui/core/Divider';\r\n// import Button from '@material-ui/core/Button';\r\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import ArchiveIcon from '@material-ui/icons/Archive';\r\n\r\n// import ArchivedLists from './ArchivedLists';\r\n// import ArchivedCards from './ArchivedCards';\r\n// import useStyles from '../../utils/allStyles';\r\n\r\n// const BoardDrawer = () => {\r\n//   const classes = useStyles();\r\n//   const [open, setOpen] = useState(false);\r\n//   const [viewingArchivedLists, setViewingArchivedLists] = useState(false);\r\n//   const [viewingArchivedCards, setViewingArchivedCards] = useState(false);\r\n//   const [activityChunks, setActivityChunks] = useState(1);\r\n//   const activity = useSelector((state) => state.board.board.activity);\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//     setActivityChunks(1);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Drawer\r\n//         className={open ? classes.drawer : classes.hide}\r\n//         variant='persistent'\r\n//         anchor='right'\r\n//         open={open}\r\n//         classes={{\r\n//           paper: classes.drawerPaper,\r\n//         }}\r\n//       >\r\n//         {!viewingArchivedLists && !viewingArchivedCards ? (\r\n//           <div>\r\n//             <div className={classes.drawerHeader}>\r\n//               <h3>Menu</h3>\r\n//               <Button onClick={handleClose}>\r\n//                 <CloseIcon />\r\n//               </Button>\r\n//             </div>\r\n//             <Divider />\r\n//             <List>\r\n//               <ListItem button onClick={() => setViewingArchivedLists(true)}>\r\n//                 <ListItemIcon>\r\n//                   <ArchiveIcon />\r\n//                 </ListItemIcon>\r\n//                 <ListItemText primary={'Archived Lists'} />\r\n//               </ListItem>\r\n//               <ListItem button onClick={() => setViewingArchivedCards(true)}>\r\n//                 <ListItemIcon>\r\n//                   <ArchiveIcon />\r\n//                 </ListItemIcon>\r\n//                 <ListItemText primary={'Archived Cards'} />\r\n//               </ListItem>\r\n//             </List>\r\n//             <Divider />\r\n//             <div className={classes.activityTitle}>\r\n//               <h3>Activity</h3>\r\n//             </div>\r\n//             <List>\r\n//               {activity.slice(0, activityChunks * 10).map((activity) => (\r\n//                 <ListItem key={activity._id}>\r\n//                   <ListItemText\r\n//                     primary={activity.text}\r\n//                     secondary={<Moment fromNow>{activity.date}</Moment>}\r\n//                   />\r\n//                 </ListItem>\r\n//               ))}\r\n//             </List>\r\n//             <div className={classes.viewMoreActivityButton}>\r\n//               <Button\r\n//                 disabled={activityChunks * 10 > activity.length}\r\n//                 onClick={() => setActivityChunks(activityChunks + 1)}\r\n//               >\r\n//                 View More Activity\r\n//               </Button>\r\n//             </div>\r\n//           </div>\r\n//         ) : viewingArchivedLists ? (\r\n//           <div>\r\n//             <div className={classes.drawerHeader}>\r\n//               <Button onClick={() => setViewingArchivedLists(false)}>\r\n//                 <ChevronLeftIcon />\r\n//               </Button>\r\n//               <h3>Archived Lists</h3>\r\n//               <Button onClick={handleClose}>\r\n//                 <CloseIcon />\r\n//               </Button>\r\n//             </div>\r\n//             <Divider />\r\n//             <ArchivedLists />\r\n//           </div>\r\n//         ) : (\r\n//           <div>\r\n//             <div className={classes.drawerHeader}>\r\n//               <Button onClick={() => setViewingArchivedCards(false)}>\r\n//                 <ChevronLeftIcon />\r\n//               </Button>\r\n//               <h3>Archived Cards</h3>\r\n//               <Button onClick={handleClose}>\r\n//                 <CloseIcon />\r\n//               </Button>\r\n//             </div>\r\n//             <Divider />\r\n//             <ArchivedCards />\r\n//           </div>\r\n//         )}\r\n//         <Divider />\r\n//       </Drawer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BoardDrawer;\r\n"]},"metadata":{},"sourceType":"module"}