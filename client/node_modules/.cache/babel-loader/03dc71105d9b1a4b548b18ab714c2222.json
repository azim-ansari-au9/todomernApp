{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{moveList}from'../../actions/board';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogTitle from'@material-ui/core/DialogTitle';import CloseIcon from'@material-ui/icons/Close';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import useStyles from'../../utils/dialogStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MoveList=function MoveList(_ref){var listId=_ref.listId,closeMenu=_ref.closeMenu;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openDialog=_useState2[0],setOpenDialog=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),position=_useState4[0],setPosition=_useState4[1];var _useState5=useState([0]),_useState6=_slicedToArray(_useState5,2),positions=_useState6[0],setPositions=_useState6[1];var lists=useSelector(function(state){return state.board.board.lists;});var listObjects=useSelector(function(state){return state.board.board.listObjects;});var dispatch=useDispatch();useEffect(function(){var mappedListObjects=listObjects.sort(function(a,b){return lists.findIndex(function(id){return id===a._id;})-lists.findIndex(function(id){return id===b._id;});}).map(function(list,index){return{list:list,index:index};});setPositions(mappedListObjects.filter(function(list){return!list.list.archived;}).map(function(list){return list.index;}));setPosition(mappedListObjects.findIndex(function(list){return list.list._id===listId;}));},[lists,listId,listObjects]);var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(moveList(listId,{toIndex:position}));setOpenDialog(false);closeMenu();case 3:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setOpenDialog(true);},children:\"Move This List\"}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:function onClose(){return setOpenDialog(false);},children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.moveListTop,children:[/*#__PURE__*/_jsx(DialogTitle,{children:'Move List'}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setOpenDialog(false);},children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(DialogActions,{className:classes.moveListBottom,children:/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"Position\"}),/*#__PURE__*/_jsx(Select,{value:position,required:true,onChange:function onChange(e){return setPosition(e.target.value);},displayEmpty:true,children:positions.map(function(position,index){return/*#__PURE__*/_jsx(MenuItem,{value:position,children:index+1},position);})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.moveListButton,onClick:onSubmit,children:\"Move List\"})]})})]})]});};export default MoveList;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/list/MoveList.js"],"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","moveList","Button","Dialog","DialogActions","DialogTitle","CloseIcon","InputLabel","MenuItem","FormControl","Select","useStyles","MoveList","listId","closeMenu","classes","openDialog","setOpenDialog","position","setPosition","positions","setPositions","lists","state","board","listObjects","dispatch","mappedListObjects","sort","a","b","findIndex","id","_id","map","list","index","filter","archived","onSubmit","toIndex","moveListTop","moveListBottom","e","target","value","moveListButton"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { moveList } from '../../actions/board';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport useStyles from '../../utils/dialogStyles';\r\n\r\nconst MoveList = ({ listId, closeMenu }) => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [position, setPosition] = useState(0);\r\n  const [positions, setPositions] = useState([0]);\r\n  const lists = useSelector((state) => state.board.board.lists);\r\n  const listObjects = useSelector((state) => state.board.board.listObjects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const mappedListObjects = listObjects\r\n      .sort(\r\n        (a, b) =>\r\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\r\n      )\r\n      .map((list, index) => ({ list, index }));\r\n    setPositions(\r\n      mappedListObjects.filter((list) => !list.list.archived).map((list) => list.index)\r\n    );\r\n    setPosition(mappedListObjects.findIndex((list) => list.list._id === listId));\r\n  }, [lists, listId, listObjects]);\r\n\r\n  const onSubmit = async () => {\r\n    dispatch(moveList(listId, { toIndex: position }));\r\n    setOpenDialog(false);\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => setOpenDialog(true)}>Move This List</div>\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n        <div className={classes.moveListTop}>\r\n          <DialogTitle>{'Move List'}</DialogTitle>\r\n          <Button onClick={() => setOpenDialog(false)}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n        <DialogActions className={classes.moveListBottom}>\r\n          <FormControl>\r\n            <InputLabel shrink>Position</InputLabel>\r\n            <Select\r\n              value={position}\r\n              required\r\n              onChange={(e) => setPosition(e.target.value)}\r\n              displayEmpty\r\n            >\r\n              {positions.map((position, index) => (\r\n                <MenuItem key={position} value={position}>\r\n                  {index + 1}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.moveListButton}\r\n              onClick={onSubmit}\r\n            >\r\n              Move List\r\n            </Button>\r\n          </FormControl>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMoveList.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MoveList;\r\n"]},"metadata":{},"sourceType":"module"}