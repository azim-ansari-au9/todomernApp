{"ast":null,"code":"import _objectSpread from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useRef,useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{Draggable}from'react-beautiful-dnd';import{getCard,editCard}from'../../actions/board';import getInitials from'../../utils/getInitials';import CardMUI from'@material-ui/core/Card';import EditIcon from'@material-ui/icons/Edit';import CloseIcon from'@material-ui/icons/Close';import SubjectIcon from'@material-ui/icons/Subject';import AssignmentTurnedInIcon from'@material-ui/icons/AssignmentTurnedIn';import{TextField,CardContent,Button,Avatar,Tooltip}from'@material-ui/core';import CardModal from'./CardModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Card=function Card(_ref){var cardId=_ref.cardId,list=_ref.list,index=_ref.index;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openModal=_useState4[0],setOpenModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),mouseOver=_useState6[0],setMouseOver=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),title=_useState8[0],setTitle=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),height=_useState10[0],setHeight=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),completeItems=_useState12[0],setCompleteItems=_useState12[1];var cardRef=useRef(null);var card=useSelector(function(state){return state.board.board.cardObjects.find(function(object){return object._id===cardId;});});var dispatch=useDispatch();useEffect(function(){dispatch(getCard(cardId));},[cardId,dispatch]);useEffect(function(){if(card){setTitle(card.title);card.checklist&&setCompleteItems(card.checklist.reduce(function(completed,item){return completed+=item.complete?1:0;},0));}},[card]);useEffect(function(){cardRef&&cardRef.current&&setHeight(cardRef.current.clientHeight);},[list,card,cardRef]);var onSubmitEdit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();dispatch(editCard(cardId,{title:title}));setEditing(false);setMouseOver(false);case 4:case\"end\":return _context.stop();}}},_callee);}));return function onSubmitEdit(_x){return _ref2.apply(this,arguments);};}();return!card||card&&card.archived?'':/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(CardModal,{cardId:cardId,open:openModal,setOpen:setOpenModal,card:card,list:list}),!editing?/*#__PURE__*/_jsx(Draggable,{draggableId:cardId,index:index,children:function children(provided){return/*#__PURE__*/_jsxs(CardMUI,_objectSpread(_objectSpread(_objectSpread({className:\"card \".concat(mouseOver&&!editing?'mouse-over':''),onMouseOver:function onMouseOver(){return setMouseOver(true);},onMouseLeave:function onMouseLeave(){return setMouseOver(false);},ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{children:[mouseOver&&!editing&&/*#__PURE__*/_jsx(Button,{style:{position:'absolute',bottom:height-40,left:'180px',zIndex:1},onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsxs(CardContent,{onClick:function onClick(){setOpenModal(true);setMouseOver(false);},ref:cardRef,children:[card.label&&card.label!=='none'&&/*#__PURE__*/_jsx(\"div\",{className:\"card-label\",style:{backgroundColor:card.label}}),/*#__PURE__*/_jsx(\"p\",{children:card.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-bottom\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-bottom-left\",children:[card.description&&/*#__PURE__*/_jsx(SubjectIcon,{className:\"description-indicator\",fontSize:\"small\"}),card.checklist&&card.checklist.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"checklist-indicator \".concat(completeItems===card.checklist.length?'completed-checklist-indicator':''),children:[/*#__PURE__*/_jsx(AssignmentTurnedInIcon,{fontSize:\"small\",className:\"checklist-indicator-icon\"}),completeItems,\"/\",card.checklist.length]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-member-avatars\",children:card.members.map(function(member){return/*#__PURE__*/_jsx(Tooltip,{title:member.name,children:/*#__PURE__*/_jsx(Avatar,{className:\"avatar\",children:getInitials(member.name)})},member.user);})})]})]})]}));}}):/*#__PURE__*/_jsxs(\"form\",{className:\"create-card-form\",onSubmit:function onSubmit(e){return onSubmitEdit(e);},children:[/*#__PURE__*/_jsx(CardMUI,{children:/*#__PURE__*/_jsx(CardContent,{className:\"card-edit-content\",children:/*#__PURE__*/_jsx(TextField,{margin:\"normal\",fullWidth:true,multiline:true,required:true,label:\"Edit this card's title\",autoFocus:true,value:title,onChange:function onChange(e){return setTitle(e.target.value);},onKeyPress:function onKeyPress(e){return e.key==='Enter'&&onSubmitEdit(e);}})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-actions\",children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Save\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){setEditing(false);setMouseOver(false);setTitle(card.title);},children:/*#__PURE__*/_jsx(CloseIcon,{})})]})]})]});};export default Card;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/card/Card.js"],"names":["React","Fragment","useRef","useState","useEffect","useSelector","useDispatch","Draggable","getCard","editCard","getInitials","CardMUI","EditIcon","CloseIcon","SubjectIcon","AssignmentTurnedInIcon","TextField","CardContent","Button","Avatar","Tooltip","CardModal","Card","cardId","list","index","editing","setEditing","openModal","setOpenModal","mouseOver","setMouseOver","title","setTitle","height","setHeight","completeItems","setCompleteItems","cardRef","card","state","board","cardObjects","find","object","_id","dispatch","checklist","reduce","completed","item","complete","current","clientHeight","onSubmitEdit","e","preventDefault","archived","provided","innerRef","draggableProps","dragHandleProps","position","bottom","left","zIndex","label","backgroundColor","description","length","members","map","member","name","user","target","value","key"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { getCard, editCard } from '../../actions/board';\r\nimport getInitials from '../../utils/getInitials';\r\n\r\nimport CardMUI from '@material-ui/core/Card';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport { TextField, CardContent, Button, Avatar, Tooltip } from '@material-ui/core';\r\nimport CardModal from './CardModal';\r\n\r\nconst Card = ({ cardId, list, index }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [mouseOver, setMouseOver] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [height, setHeight] = useState(0);\r\n  const [completeItems, setCompleteItems] = useState(0);\r\n  const cardRef = useRef(null);\r\n  const card = useSelector((state) =>\r\n    state.board.board.cardObjects.find((object) => object._id === cardId)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCard(cardId));\r\n  }, [cardId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      setTitle(card.title);\r\n      card.checklist &&\r\n        setCompleteItems(\r\n          card.checklist.reduce(\r\n            (completed, item) => (completed += item.complete ? 1 : 0),\r\n            0\r\n          )\r\n        );\r\n    }\r\n  }, [card]);\r\n\r\n  useEffect(() => {\r\n    cardRef && cardRef.current && setHeight(cardRef.current.clientHeight);\r\n  }, [list, card, cardRef]);\r\n\r\n  const onSubmitEdit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(cardId, { title }));\r\n    setEditing(false);\r\n    setMouseOver(false);\r\n  };\r\n\r\n  return !card || (card && card.archived) ? (\r\n    ''\r\n  ) : (\r\n    <Fragment>\r\n      <CardModal\r\n        cardId={cardId}\r\n        open={openModal}\r\n        setOpen={setOpenModal}\r\n        card={card}\r\n        list={list}\r\n      />\r\n      {!editing ? (\r\n        <Draggable draggableId={cardId} index={index}>\r\n          {(provided) => (\r\n            <CardMUI\r\n              className={`card ${mouseOver && !editing ? 'mouse-over' : ''}`}\r\n              onMouseOver={() => setMouseOver(true)}\r\n              onMouseLeave={() => setMouseOver(false)}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              {mouseOver && !editing && (\r\n                <Button\r\n                  style={{\r\n                    position: 'absolute',\r\n                    bottom: height - 40,\r\n                    left: '180px',\r\n                    zIndex: 1,\r\n                  }}\r\n                  onClick={() => setEditing(true)}\r\n                >\r\n                  <EditIcon fontSize='small' />\r\n                </Button>\r\n              )}\r\n              <CardContent\r\n                onClick={() => {\r\n                  setOpenModal(true);\r\n                  setMouseOver(false);\r\n                }}\r\n                ref={cardRef}\r\n              >\r\n                {card.label && card.label !== 'none' && (\r\n                  <div className='card-label' style={{ backgroundColor: card.label }} />\r\n                )}\r\n                <p>{card.title}</p>\r\n                <div className='card-bottom'>\r\n                  <div className='card-bottom-left'>\r\n                    {card.description && (\r\n                      <SubjectIcon className='description-indicator' fontSize='small' />\r\n                    )}\r\n                    {card.checklist && card.checklist.length > 0 && (\r\n                      <div\r\n                        className={`checklist-indicator ${\r\n                          completeItems === card.checklist.length\r\n                            ? 'completed-checklist-indicator'\r\n                            : ''\r\n                        }`}\r\n                      >\r\n                        <AssignmentTurnedInIcon\r\n                          fontSize='small'\r\n                          className='checklist-indicator-icon'\r\n                        />\r\n                        {completeItems}/{card.checklist.length}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='card-member-avatars'>\r\n                    {card.members.map((member) => {\r\n                      return (\r\n                        <Tooltip title={member.name} key={member.user}>\r\n                          <Avatar className='avatar'>{getInitials(member.name)}</Avatar>\r\n                        </Tooltip>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </CardMUI>\r\n          )}\r\n        </Draggable>\r\n      ) : (\r\n        <form className='create-card-form' onSubmit={(e) => onSubmitEdit(e)}>\r\n          <CardMUI>\r\n            <CardContent className='card-edit-content'>\r\n              <TextField\r\n                margin='normal'\r\n                fullWidth\r\n                multiline\r\n                required\r\n                label=\"Edit this card's title\"\r\n                autoFocus\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && onSubmitEdit(e)}\r\n              />\r\n            </CardContent>\r\n          </CardMUI>\r\n          <div className='card-actions'>\r\n            <Button type='submit' variant='contained' color='primary'>\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setEditing(false);\r\n                setMouseOver(false);\r\n                setTitle(card.title);\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}