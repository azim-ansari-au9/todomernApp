{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZIM ANSARI\\\\Desktop\\\\azim-ansari-au9\\\\fprtTest\\\\fprtMERNAPP\\\\client\\\\src\\\\components\\\\pages\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getBoard, moveCard, moveList } from '../../actions/board';\nimport { CircularProgress, Box } from '@material-ui/core';\nimport BoardTitle from '../board/BoardTitle';\nimport BoardDrawer from '../board/BoardDrawer';\nimport List from '../list/List';\nimport CreateList from '../board/CreateList';\nimport Navbar from '../other/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = ({\n  match\n}) => {\n  _s();\n\n  const board = useSelector(state => state.board.board);\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBoard(match.params.id));\n  }, [dispatch, match.params.id]);\n  useEffect(() => {\n    if (board === null || board === void 0 ? void 0 : board.title) document.title = board.title + ' | TODO';\n  }, [board === null || board === void 0 ? void 0 : board.title]);\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      type\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (type === 'card') {\n      dispatch(moveCard(draggableId, {\n        fromId: source.droppableId,\n        toId: destination.droppableId,\n        toIndex: destination.index\n      }));\n    } else {\n      dispatch(moveList(draggableId, {\n        toIndex: destination.index\n      }));\n    }\n  };\n\n  return !board ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"board-loading\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-and-navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-top-left\",\n          children: /*#__PURE__*/_jsxDEV(BoardTitle, {\n            board: board\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BoardDrawer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"all-lists\",\n          direction: \"horizontal\",\n          type: \"list\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lists\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [board.lists.map((listId, index) => /*#__PURE__*/_jsxDEV(List, {\n              listId: listId,\n              index: index\n            }, listId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(CreateList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Board, \"hztsINLPcDRJeFSOq0TXtw1sFAo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/pages/Board.js"],"names":["React","Fragment","useEffect","useSelector","useDispatch","Redirect","DragDropContext","Droppable","getBoard","moveCard","moveList","CircularProgress","Box","BoardTitle","BoardDrawer","List","CreateList","Navbar","Board","match","board","state","isAuthenticated","auth","dispatch","params","id","title","document","onDragEnd","result","source","destination","draggableId","type","fromId","droppableId","toId","toIndex","index","provided","innerRef","droppableProps","lists","map","listId","placeholder"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { getBoard, moveCard, moveList } from '../../actions/board';\r\nimport { CircularProgress, Box } from '@material-ui/core';\r\nimport BoardTitle from '../board/BoardTitle';\r\nimport BoardDrawer from '../board/BoardDrawer';\r\nimport List from '../list/List';\r\nimport CreateList from '../board/CreateList';\r\nimport Navbar from '../other/Navbar';\r\n\r\nconst Board = ({ match }) => {\r\n  const board = useSelector((state) => state.board.board);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBoard(match.params.id));\r\n  }, [dispatch, match.params.id]);\r\n\r\n  useEffect(() => {\r\n    if (board?.title) document.title = board.title + ' | TODO';\r\n  }, [board?.title]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId, type } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (type === 'card') {\r\n      dispatch(\r\n        moveCard(draggableId, {\r\n          fromId: source.droppableId,\r\n          toId: destination.droppableId,\r\n          toIndex: destination.index,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(moveList(draggableId, { toIndex: destination.index }));\r\n    }\r\n  };\r\n\r\n  return !board ? (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Box className='board-loading'>\r\n        <CircularProgress />\r\n      </Box>\r\n    </Fragment>\r\n  ) : (\r\n    <div className='board-and-navbar'>\r\n      <Navbar />\r\n      <section className='board'>\r\n        <div className='board-top'>\r\n          <div className='board-top-left'>\r\n            <BoardTitle board={board} />\r\n          </div>\r\n          <BoardDrawer />\r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId='all-lists' direction='horizontal' type='list'>\r\n            {(provided) => (\r\n              <div className='lists' ref={provided.innerRef} {...provided.droppableProps}>\r\n                {board.lists.map((listId, index) => (\r\n                  <List key={listId} listId={listId} index={index} />\r\n                ))}\r\n                {provided.placeholder}\r\n                <CreateList />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}