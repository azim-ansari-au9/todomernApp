{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_BOARD, GET_BOARDS, GET_BOARD, ADD_BOARD, BOARD_ERROR, RENAME_BOARD, GET_LIST, ADD_LIST, RENAME_LIST, ARCHIVE_LIST, GET_CARD, ADD_CARD, EDIT_CARD, MOVE_CARD, ARCHIVE_CARD, DELETE_CARD, GET_ACTIVITY, ADD_MEMBER, MOVE_LIST, ADD_CARD_MEMBER, ADD_CHECKLIST_ITEM, EDIT_CHECKLIST_ITEM, COMPLETE_CHECKLIST_ITEM, DELETE_CHECKLIST_ITEM } from './types';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}; // Get boards\n\nexport const getBoards = () => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_BOARD\n    });\n    const res = await axios.get('/api/boards');\n    dispatch({\n      type: GET_BOARDS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get board\n\nexport const getBoard = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/boards/${id}`);\n\n    if (res) {\n      axios.defaults.headers.common['boardId'] = id;\n    } else {\n      delete axios.defaults.headers.common['boardId'];\n    }\n\n    dispatch({\n      type: GET_BOARD,\n      payload: { ...res.data,\n        listObjects: [],\n        cardObjects: []\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add board\n\nexport const addBoard = (formData, history) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/boards', body, config);\n    dispatch({\n      type: ADD_BOARD,\n      payload: res.data\n    });\n    dispatch(setAlert('Board Created', 'success'));\n    history.push(`/board/${res.data._id}`);\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Rename board\n\nexport const renameBoard = (boardId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\n    dispatch({\n      type: RENAME_BOARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get list\n\nexport const getList = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/lists/${id}`);\n    dispatch({\n      type: GET_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add list\n\nexport const addList = formData => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/lists', body, config);\n    dispatch({\n      type: ADD_LIST,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Rename list\n\nexport const renameList = (listId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\n    dispatch({\n      type: RENAME_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Archive/Unarchive list\n\nexport const archiveList = (listId, archive) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\n    dispatch({\n      type: ARCHIVE_LIST,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get card\n\nexport const getCard = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/cards/${id}`);\n    dispatch({\n      type: GET_CARD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add card\n\nexport const addCard = formData => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/cards', body, config);\n    dispatch({\n      type: ADD_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Edit card\n\nexport const editCard = (cardId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/cards/edit/${cardId}`, formData, config);\n    dispatch({\n      type: EDIT_CARD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Move card\n\nexport const moveCard = (cardId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/cards/move/${cardId}`, body, config);\n    dispatch({\n      type: MOVE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Archive/Unarchive card\n\nexport const archiveCard = (cardId, archive) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\n    dispatch({\n      type: ARCHIVE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete card\n\nexport const deleteCard = (listId, cardId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\n    dispatch({\n      type: DELETE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get activity\n\nexport const getActivity = () => async dispatch => {\n  try {\n    const boardId = axios.defaults.headers.common['boardId'];\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\n    dispatch({\n      type: GET_ACTIVITY,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add member\n\nexport const addMember = userId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\n    dispatch({\n      type: ADD_MEMBER,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Move list\n\nexport const moveList = (listId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\n    dispatch({\n      type: MOVE_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add card member\n\nexport const addCardMember = formData => async dispatch => {\n  try {\n    const {\n      add,\n      cardId,\n      userId\n    } = formData;\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\n    dispatch({\n      type: ADD_CARD_MEMBER,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add checklist item\n\nexport const addChecklistItem = (cardId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\n    dispatch({\n      type: ADD_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Edit checklist item\n\nexport const editChecklistItem = (cardId, itemId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\n    dispatch({\n      type: EDIT_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Complete/Uncomplete checklist item\n\nexport const completeChecklistItem = formData => async dispatch => {\n  try {\n    const {\n      cardId,\n      complete,\n      itemId\n    } = formData;\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\n    dispatch({\n      type: COMPLETE_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete checklist item\n\nexport const deleteChecklistItem = (cardId, itemId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\n    dispatch({\n      type: DELETE_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/actions/board.js"],"names":["axios","setAlert","CLEAR_BOARD","GET_BOARDS","GET_BOARD","ADD_BOARD","BOARD_ERROR","RENAME_BOARD","GET_LIST","ADD_LIST","RENAME_LIST","ARCHIVE_LIST","GET_CARD","ADD_CARD","EDIT_CARD","MOVE_CARD","ARCHIVE_CARD","DELETE_CARD","GET_ACTIVITY","ADD_MEMBER","MOVE_LIST","ADD_CARD_MEMBER","ADD_CHECKLIST_ITEM","EDIT_CHECKLIST_ITEM","COMPLETE_CHECKLIST_ITEM","DELETE_CHECKLIST_ITEM","config","headers","getBoards","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getBoard","id","defaults","common","listObjects","cardObjects","addBoard","formData","history","body","JSON","stringify","post","push","_id","renameBoard","boardId","patch","getActivity","getList","addList","renameList","listId","archiveList","archive","getCard","addCard","editCard","cardId","moveCard","archiveCard","deleteCard","delete","addMember","userId","put","moveList","addCardMember","add","addChecklistItem","editChecklistItem","itemId","completeChecklistItem","complete","deleteChecklistItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  CLEAR_BOARD,\r\n  GET_BOARDS,\r\n  GET_BOARD,\r\n  ADD_BOARD,\r\n  BOARD_ERROR,\r\n  RENAME_BOARD,\r\n  GET_LIST,\r\n  ADD_LIST,\r\n  RENAME_LIST,\r\n  ARCHIVE_LIST,\r\n  GET_CARD,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  MOVE_CARD,\r\n  ARCHIVE_CARD,\r\n  DELETE_CARD,\r\n  GET_ACTIVITY,\r\n  ADD_MEMBER,\r\n  MOVE_LIST,\r\n  ADD_CARD_MEMBER,\r\n  ADD_CHECKLIST_ITEM,\r\n  EDIT_CHECKLIST_ITEM,\r\n  COMPLETE_CHECKLIST_ITEM,\r\n  DELETE_CHECKLIST_ITEM,\r\n} from './types';\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\n// Get boards\r\nexport const getBoards = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CLEAR_BOARD });\r\n\r\n    const res = await axios.get('/api/boards');\r\n\r\n    dispatch({\r\n      type: GET_BOARDS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    \r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get board\r\nexport const getBoard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/boards/${id}`);\r\n\r\n    if (res) {\r\n      axios.defaults.headers.common['boardId'] = id;\r\n    } else {\r\n      delete axios.defaults.headers.common['boardId'];\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_BOARD,\r\n      payload: { ...res.data, listObjects: [], cardObjects: [] },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add board\r\nexport const addBoard = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/boards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Board Created', 'success'));\r\n\r\n    history.push(`/board/${res.data._id}`);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Rename board\r\nexport const renameBoard = (boardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: RENAME_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get list\r\nexport const getList = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/lists/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add list\r\nexport const addList = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/lists', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Rename list\r\nexport const renameList = (listId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: RENAME_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Archive/Unarchive list\r\nexport const archiveList = (listId, archive) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\r\n\r\n    dispatch({\r\n      type: ARCHIVE_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get card\r\nexport const getCard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/cards/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card\r\nexport const addCard = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/cards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit card\r\nexport const editCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/cards/edit/${cardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Move card\r\nexport const moveCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/cards/move/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Archive/Unarchive card\r\nexport const archiveCard = (cardId, archive) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: ARCHIVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete card\r\nexport const deleteCard = (listId, cardId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get activity\r\nexport const getActivity = () => async (dispatch) => {\r\n  try {\r\n    const boardId = axios.defaults.headers.common['boardId'];\r\n\r\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\r\n\r\n    dispatch({\r\n      type: GET_ACTIVITY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add member\r\nexport const addMember = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\r\n\r\n    dispatch({\r\n      type: ADD_MEMBER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Move list\r\nexport const moveList = (listId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card member\r\nexport const addCardMember = (formData) => async (dispatch) => {\r\n  try {\r\n    const { add, cardId, userId } = formData;\r\n\r\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\r\n\r\n    dispatch({\r\n      type: ADD_CARD_MEMBER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add checklist item\r\nexport const addChecklistItem = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit checklist item\r\nexport const editChecklistItem = (cardId, itemId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Complete/Uncomplete checklist item\r\nexport const completeChecklistItem = (formData) => async (dispatch) => {\r\n  try {\r\n    const { cardId, complete, itemId } = formData;\r\n\r\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\r\n\r\n    dispatch({\r\n      type: COMPLETE_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete checklist item\r\nexport const deleteChecklistItem = (cardId, itemId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}