{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{moveCard}from'../../actions/board';import Button from'@material-ui/core/Button';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import useStyles from'../../utils/modalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MoveCard=function MoveCard(_ref){var cardId=_ref.cardId,setOpen=_ref.setOpen,thisList=_ref.thisList;var classes=useStyles();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),listObject=_useState2[0],setListObject=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),listTitle=_useState4[0],setListTitle=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),position=_useState6[0],setPosition=_useState6[1];var _useState7=useState([0]),_useState8=_slicedToArray(_useState7,2),positions=_useState8[0],setPositions=_useState8[1];var lists=useSelector(function(state){return state.board.board.lists;});var listObjects=useSelector(function(state){return state.board.board.listObjects.sort(function(a,b){return lists.findIndex(function(id){return id===a._id;})-lists.findIndex(function(id){return id===b._id;});}).filter(function(list){return!list.archived;});});var cardObjects=useSelector(function(state){return state.board.board.cardObjects;});var dispatch=useDispatch();useEffect(function(){setListObject(thisList);setListTitle(thisList.title);},[thisList,cardId]);useEffect(function(){if(listObject){var unarchivedListCards=listObject.cards.map(function(id,index){var card=cardObjects.find(function(object){return object._id===id;});var position=index;return{card:card,position:position};}).filter(function(card){return!card.card.archived;});var cardPositions=unarchivedListCards.map(function(card){return card.position;});if(listObject!==thisList){cardPositions=cardPositions.concat(listObject.cards.length);}if(listObject.cards.length>0){setPositions(cardPositions);setPosition(thisList.cards.findIndex(function(id){return id===cardId;}));}else{setPositions([0]);setPosition(0);}}},[thisList,cardId,listObject,cardObjects]);var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(moveCard(cardId,{fromId:thisList._id,toId:listObject._id,toIndex:position}));setOpen(false);case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:classes.moveCard,children:[/*#__PURE__*/_jsx(\"h3\",{className:classes.moveCardTitle,children:\"Move this card\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormControl,{className:classes.moveCardSelect,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"List\"}),/*#__PURE__*/_jsx(Select,{value:listTitle,required:true,onChange:function onChange(e){setListTitle(e.target.value);setListObject(listObjects.find(function(list){return list.title===e.target.value;}));},displayEmpty:true,children:listObjects.map(function(list){return/*#__PURE__*/_jsx(MenuItem,{value:list.title,children:list.title},list._id);})})]}),/*#__PURE__*/_jsxs(FormControl,{className:classes.moveCardSelect,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"Position\"}),/*#__PURE__*/_jsx(Select,{value:position,required:true,onChange:function onChange(e){return setPosition(e.target.value);},displayEmpty:true,children:positions.map(function(position,index){return/*#__PURE__*/_jsx(MenuItem,{value:position,children:index+1},position);})})]})]}),/*#__PURE__*/_jsx(Button,{className:classes.button,variant:\"contained\",color:\"primary\",onClick:onSubmit,children:\"Move Card\"})]});};export default MoveCard;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/card/MoveCard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","moveCard","Button","InputLabel","MenuItem","FormControl","Select","useStyles","MoveCard","cardId","setOpen","thisList","classes","listObject","setListObject","listTitle","setListTitle","position","setPosition","positions","setPositions","lists","state","board","listObjects","sort","a","b","findIndex","id","_id","filter","list","archived","cardObjects","dispatch","title","unarchivedListCards","cards","map","index","card","find","object","cardPositions","concat","length","onSubmit","fromId","toId","toIndex","moveCardTitle","moveCardSelect","e","target","value","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { moveCard } from '../../actions/board';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport useStyles from '../../utils/modalStyles';\r\n\r\nconst MoveCard = ({ cardId, setOpen, thisList }) => {\r\n  const classes = useStyles();\r\n  const [listObject, setListObject] = useState(null);\r\n  const [listTitle, setListTitle] = useState('');\r\n  const [position, setPosition] = useState(0);\r\n  const [positions, setPositions] = useState([0]);\r\n  const lists = useSelector((state) => state.board.board.lists);\r\n  const listObjects = useSelector((state) =>\r\n    state.board.board.listObjects\r\n      .sort(\r\n        (a, b) =>\r\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\r\n      )\r\n      .filter((list) => !list.archived)\r\n  );\r\n  const cardObjects = useSelector((state) => state.board.board.cardObjects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setListObject(thisList);\r\n    setListTitle(thisList.title);\r\n  }, [thisList, cardId]);\r\n\r\n  useEffect(() => {\r\n    if (listObject) {\r\n      const unarchivedListCards = listObject.cards\r\n        .map((id, index) => {\r\n          const card = cardObjects.find((object) => object._id === id);\r\n          const position = index;\r\n          return { card, position };\r\n        })\r\n        .filter((card) => !card.card.archived);\r\n      let cardPositions = unarchivedListCards.map((card) => card.position);\r\n      if (listObject !== thisList) {\r\n        cardPositions = cardPositions.concat(listObject.cards.length);\r\n      }\r\n      if (listObject.cards.length > 0) {\r\n        setPositions(cardPositions);\r\n        setPosition(thisList.cards.findIndex((id) => id === cardId));\r\n      } else {\r\n        setPositions([0]);\r\n        setPosition(0);\r\n      }\r\n    }\r\n  }, [thisList, cardId, listObject, cardObjects]);\r\n\r\n  const onSubmit = async () => {\r\n    dispatch(\r\n      moveCard(cardId, { fromId: thisList._id, toId: listObject._id, toIndex: position })\r\n    );\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.moveCard}>\r\n      <h3 className={classes.moveCardTitle}>Move this card</h3>\r\n      <div>\r\n        <FormControl className={classes.moveCardSelect}>\r\n          <InputLabel shrink>List</InputLabel>\r\n          <Select\r\n            value={listTitle}\r\n            required\r\n            onChange={(e) => {\r\n              setListTitle(e.target.value);\r\n              setListObject(listObjects.find((list) => list.title === e.target.value));\r\n            }}\r\n            displayEmpty\r\n          >\r\n            {listObjects.map((list) => (\r\n              <MenuItem key={list._id} value={list.title}>\r\n                {list.title}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.moveCardSelect}>\r\n          <InputLabel shrink>Position</InputLabel>\r\n          <Select\r\n            value={position}\r\n            required\r\n            onChange={(e) => setPosition(e.target.value)}\r\n            displayEmpty\r\n          >\r\n            {positions.map((position, index) => (\r\n              <MenuItem key={position} value={position}>\r\n                {index + 1}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        className={classes.button}\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={onSubmit}\r\n      >\r\n        Move Card\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoveCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  thisList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MoveCard;\r\n"]},"metadata":{},"sourceType":"module"}