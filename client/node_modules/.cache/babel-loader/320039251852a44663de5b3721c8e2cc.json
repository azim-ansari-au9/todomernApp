{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch}from'react-redux';import{GithubPicker}from'react-color';import{editCard,archiveCard}from'../../actions/board';import{Modal,TextField,Button}from'@material-ui/core';import CloseIcon from'@material-ui/icons/Close';import MoveCard from'./MoveCard';import DeleteCard from'./DeleteCard';import CardMembers from'./CardMembers';import Checklist from'../checklist/Checklist';import useStyles from'../../utils/modalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardModal=function CardModal(_ref){var cardId=_ref.cardId,open=_ref.open,setOpen=_ref.setOpen,card=_ref.card,list=_ref.list;var classes=useStyles();var _useState=useState(card.title),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(card.description),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var dispatch=useDispatch();useEffect(function(){setTitle(card.title);setDescription(card.description);},[card]);var onTitleDescriptionSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();dispatch(editCard(cardId,{title:title,description:description}));case 2:case\"end\":return _context.stop();}}},_callee);}));return function onTitleDescriptionSubmit(_x){return _ref2.apply(this,arguments);};}();var onArchiveCard=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(archiveCard(cardId,true));setOpen(false);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function onArchiveCard(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Modal,{open:open,onClose:function onClose(){return setOpen(false);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.paper,\" \").concat(classes.cardModal),children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return onTitleDescriptionSubmit(e);},children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.modalTop,children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,multiline:true,label:\"Card title\",value:title,onChange:function onChange(e){return setTitle(e.target.value);},onKeyPress:function onKeyPress(e){return e.key==='Enter'&&onTitleDescriptionSubmit(e);},className:classes.cardTitle}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setOpen(false);},children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",margin:\"normal\",fullWidth:true,multiline:true,label:\"Card description\",value:description,onChange:function onChange(e){return setDescription(e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",disabled:title===card.title&&(description===card.description||description===''&&!card.description),className:classes.button,children:\"Save All Changes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.modalSection,children:[/*#__PURE__*/_jsx(CardMembers,{card:card}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:classes.labelTitle,children:\"Label\"}),/*#__PURE__*/_jsx(GithubPicker,{className:classes.colorPicker,onChange:/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(color){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",dispatch(editCard(cardId,{label:color.hex})));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref4.apply(this,arguments);};}()}),/*#__PURE__*/_jsx(Button,{className:classes.noLabel,variant:\"outlined\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",dispatch(editCard(cardId,{label:'none'})));case 1:case\"end\":return _context4.stop();}}},_callee4);})),children:\"No Label\"})]})]}),/*#__PURE__*/_jsx(Checklist,{card:card}),/*#__PURE__*/_jsxs(\"div\",{className:classes.modalSection,children:[/*#__PURE__*/_jsx(MoveCard,{cardId:cardId,setOpen:setOpen,thisList:list}),/*#__PURE__*/_jsxs(\"div\",{className:classes.modalBottomRight,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:classes.archiveButton,onClick:onArchiveCard,children:\"Archive Card\"}),/*#__PURE__*/_jsx(DeleteCard,{cardId:cardId,setOpen:setOpen,list:list})]})]})]})});};export default CardModal;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/card/CardModal.js"],"names":["React","useState","useEffect","useDispatch","GithubPicker","editCard","archiveCard","Modal","TextField","Button","CloseIcon","MoveCard","DeleteCard","CardMembers","Checklist","useStyles","CardModal","cardId","open","setOpen","card","list","classes","title","setTitle","description","setDescription","dispatch","onTitleDescriptionSubmit","e","preventDefault","onArchiveCard","paper","cardModal","modalTop","target","value","key","cardTitle","button","modalSection","labelTitle","colorPicker","color","label","hex","noLabel","modalBottomRight","archiveButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { GithubPicker } from 'react-color';\r\nimport { editCard, archiveCard } from '../../actions/board';\r\nimport { Modal, TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MoveCard from './MoveCard';\r\nimport DeleteCard from './DeleteCard';\r\nimport CardMembers from './CardMembers';\r\nimport Checklist from '../checklist/Checklist';\r\nimport useStyles from '../../utils/modalStyles';\r\n\r\nconst CardModal = ({ cardId, open, setOpen, card, list }) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(card.title);\r\n  const [description, setDescription] = useState(card.description);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTitle(card.title);\r\n    setDescription(card.description);\r\n  }, [card]);\r\n\r\n  const onTitleDescriptionSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(cardId, { title, description }));\r\n  };\r\n\r\n  const onArchiveCard = async () => {\r\n    dispatch(archiveCard(cardId, true));\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={() => setOpen(false)}>\r\n      <div className={`${classes.paper} ${classes.cardModal}`}>\r\n        <form onSubmit={(e) => onTitleDescriptionSubmit(e)}>\r\n          <div className={classes.modalTop}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              multiline\r\n              label='Card title'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && onTitleDescriptionSubmit(e)}\r\n              className={classes.cardTitle}\r\n            />\r\n            <Button onClick={() => setOpen(false)}>\r\n              <CloseIcon />\r\n            </Button>\r\n          </div>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            fullWidth\r\n            multiline\r\n            label='Card description'\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={\r\n              title === card.title &&\r\n              (description === card.description ||\r\n                (description === '' && !card.description))\r\n            }\r\n            className={classes.button}\r\n          >\r\n            Save All Changes\r\n          </Button>\r\n        </form>\r\n        <div className={classes.modalSection}>\r\n          <CardMembers card={card} />\r\n          <div>\r\n            <h3 className={classes.labelTitle}>Label</h3>\r\n            <GithubPicker\r\n              className={classes.colorPicker}\r\n              onChange={async (color) => dispatch(editCard(cardId, { label: color.hex }))}\r\n            />\r\n            <Button\r\n              className={classes.noLabel}\r\n              variant='outlined'\r\n              onClick={async () => dispatch(editCard(cardId, { label: 'none' }))}\r\n            >\r\n              No Label\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Checklist card={card} />\r\n        <div className={classes.modalSection}>\r\n          <MoveCard cardId={cardId} setOpen={setOpen} thisList={list} />\r\n          <div className={classes.modalBottomRight}>\r\n            <Button\r\n              variant='contained'\r\n              className={classes.archiveButton}\r\n              onClick={onArchiveCard}\r\n            >\r\n              Archive Card\r\n            </Button>\r\n            <DeleteCard cardId={cardId} setOpen={setOpen} list={list} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCardModal.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  card: PropTypes.object.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CardModal;\r\n"]},"metadata":{},"sourceType":"module"}