{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{useDispatch}from'react-redux';import{completeChecklistItem,editChecklistItem,deleteChecklistItem}from'../../actions/board';import{TextField,Button}from'@material-ui/core';import{Checkbox,FormControlLabel}from'@material-ui/core';import EditIcon from'@material-ui/icons/Edit';import HighlightOffIcon from'@material-ui/icons/HighlightOff';import CloseIcon from'@material-ui/icons/Close';import useStyles from'../../utils/modalStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChecklistItem=function ChecklistItem(_ref){var item=_ref.item,card=_ref.card;var classes=useStyles();var _useState=useState(item.text),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),editing=_useState4[0],setEditing=_useState4[1];var dispatch=useDispatch();useEffect(function(){setText(item.text);},[item.text]);var onEdit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();dispatch(editChecklistItem(card._id,item._id,{text:text}));setEditing(false);case 3:case\"end\":return _context.stop();}}},_callee);}));return function onEdit(_x){return _ref2.apply(this,arguments);};}();var onComplete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(completeChecklistItem({cardId:card._id,complete:e.target.checked,itemId:item._id}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function onComplete(_x2){return _ref3.apply(this,arguments);};}();var onDelete=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(deleteChecklistItem(card._id,item._id));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function onDelete(_x3){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:classes.checklistItem,children:editing?/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return onEdit(e);},className:classes.checklistFormLabel,children:[/*#__PURE__*/_jsx(TextField,{variant:\"filled\",fullWidth:true,multiline:true,required:true,autoFocus:true,value:text,onChange:function onChange(e){return setText(e.target.value);},onKeyPress:function onKeyPress(e){return e.key==='Enter'&&onEdit(e);}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Save\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){setEditing(false);setText(item.text);},children:/*#__PURE__*/_jsx(CloseIcon,{})})]})]}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:card.checklist.find(function(cardItem){return cardItem._id===item._id;}).complete,onChange:onComplete,name:item._id}),label:item.text,className:classes.checklistFormLabel}),/*#__PURE__*/_jsxs(\"div\",{className:classes.itemButtons,children:[/*#__PURE__*/_jsx(Button,{className:classes.itemButton,onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(Button,{color:\"secondary\",className:classes.itemButton,onClick:onDelete,children:/*#__PURE__*/_jsx(HighlightOffIcon,{})})]})]})});};export default ChecklistItem;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/checklist/ChecklistItem.js"],"names":["React","Fragment","useState","useEffect","useDispatch","completeChecklistItem","editChecklistItem","deleteChecklistItem","TextField","Button","Checkbox","FormControlLabel","EditIcon","HighlightOffIcon","CloseIcon","useStyles","ChecklistItem","item","card","classes","text","setText","editing","setEditing","dispatch","onEdit","e","preventDefault","_id","onComplete","cardId","complete","target","checked","itemId","onDelete","checklistItem","checklistFormLabel","value","key","checklist","find","cardItem","itemButtons","itemButton"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {completeChecklistItem,editChecklistItem,deleteChecklistItem} from '../../actions/board';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useStyles from '../../utils/modalStyles';\r\n\r\nconst ChecklistItem = ({ item, card }) => {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(item.text);\r\n  const [editing, setEditing] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setText(item.text);\r\n  }, [item.text]);\r\n\r\n  const onEdit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(editChecklistItem(card._id, item._id, { text }));\r\n    setEditing(false);\r\n  };\r\n\r\n  const onComplete = async (e) => {\r\n    dispatch(\r\n      completeChecklistItem({\r\n        cardId: card._id,\r\n        complete: e.target.checked,\r\n        itemId: item._id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onDelete = async (e) => {\r\n    dispatch(deleteChecklistItem(card._id, item._id));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.checklistItem}>\r\n      {editing ? (\r\n        <form onSubmit={(e) => onEdit(e)} className={classes.checklistFormLabel}>\r\n          <TextField\r\n            variant='filled'\r\n            fullWidth\r\n            multiline\r\n            required\r\n            autoFocus\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && onEdit(e)}\r\n          />\r\n          <div>\r\n            <Button type='submit' variant='contained' color='primary'>\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setEditing(false);\r\n                setText(item.text);\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <Fragment>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={\r\n                  card.checklist.find((cardItem) => cardItem._id === item._id).complete\r\n                }\r\n                onChange={onComplete}\r\n                name={item._id}\r\n              />\r\n            }\r\n            label={item.text}\r\n            className={classes.checklistFormLabel}\r\n          />\r\n          <div className={classes.itemButtons}>\r\n            <Button className={classes.itemButton} onClick={() => setEditing(true)}>\r\n              <EditIcon />\r\n            </Button>\r\n            <Button color='secondary' className={classes.itemButton} onClick={onDelete}>\r\n              <HighlightOffIcon />\r\n            </Button>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nChecklistItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  card: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ChecklistItem;\r\n"]},"metadata":{},"sourceType":"module"}