{"ast":null,"code":"// import React, { Fragment, useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import {completeChecklistItem,editChecklistItem,deleteChecklistItem} from '../../actions/board';\n// import { TextField, Button } from '@material-ui/core';\n// import { Checkbox, FormControlLabel } from '@material-ui/core';\n// import EditIcon from '@material-ui/icons/Edit';\n// import HighlightOffIcon from '@material-ui/icons/HighlightOff';\n// import CloseIcon from '@material-ui/icons/Close';\n// import useStyles from '../../utils/modalStyles';\n// const ChecklistItem = ({ item, card }) => {\n//   const classes = useStyles();\n//   const [text, setText] = useState(item.text);\n//   const [editing, setEditing] = useState(false);\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     setText(item.text);\n//   }, [item.text]);\n//   const onEdit = async (e) => {\n//     e.preventDefault();\n//     dispatch(editChecklistItem(card._id, item._id, { text }));\n//     setEditing(false);\n//   };\n//   const onComplete = async (e) => {\n//     dispatch(\n//       completeChecklistItem({\n//         cardId: card._id,\n//         complete: e.target.checked,\n//         itemId: item._id,\n//       })\n//     );\n//   };\n//   const onDelete = async (e) => {\n//     dispatch(deleteChecklistItem(card._id, item._id));\n//   };\n//   return (\n//     <div className={classes.checklistItem}>\n//       {editing ? (\n//         <form onSubmit={(e) => onEdit(e)} className={classes.checklistFormLabel}>\n//           <TextField\n//             variant='filled'\n//             fullWidth\n//             multiline\n//             required\n//             autoFocus\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             onKeyPress={(e) => e.key === 'Enter' && onEdit(e)}\n//           />\n//           <div>\n//             <Button type='submit' variant='contained' color='primary'>\n//               Save\n//             </Button>\n//             <Button\n//               onClick={() => {\n//                 setEditing(false);\n//                 setText(item.text);\n//               }}\n//             >\n//               <CloseIcon />\n//             </Button>\n//           </div>\n//         </form>\n//       ) : (\n//         <Fragment>\n//           <FormControlLabel\n//             control={\n//               <Checkbox\n//                 checked={\n//                   card.checklist.find((cardItem) => cardItem._id === item._id).complete\n//                 }\n//                 onChange={onComplete}\n//                 name={item._id}\n//               />\n//             }\n//             label={item.text}\n//             className={classes.checklistFormLabel}\n//           />\n//           <div className={classes.itemButtons}>\n//             <Button className={classes.itemButton} onClick={() => setEditing(true)}>\n//               <EditIcon />\n//             </Button>\n//             <Button color='secondary' className={classes.itemButton} onClick={onDelete}>\n//               <HighlightOffIcon />\n//             </Button>\n//           </div>\n//         </Fragment>\n//       )}\n//     </div>\n//   );\n// };\n// ChecklistItem.propTypes = {\n//   item: PropTypes.object.isRequired,\n//   card: PropTypes.object.isRequired,\n// };\n// export default ChecklistItem;","map":{"version":3,"sources":["C:/Users/AZIM ANSARI/Desktop/azim-ansari-au9/fprtTest/fprtMERNAPP/client/src/components/checklist/ChecklistItem.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Fragment, useState, useEffect } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\n// import {completeChecklistItem,editChecklistItem,deleteChecklistItem} from '../../actions/board';\r\n// import { TextField, Button } from '@material-ui/core';\r\n// import { Checkbox, FormControlLabel } from '@material-ui/core';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// import useStyles from '../../utils/modalStyles';\r\n\r\n// const ChecklistItem = ({ item, card }) => {\r\n//   const classes = useStyles();\r\n//   const [text, setText] = useState(item.text);\r\n//   const [editing, setEditing] = useState(false);\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     setText(item.text);\r\n//   }, [item.text]);\r\n\r\n//   const onEdit = async (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(editChecklistItem(card._id, item._id, { text }));\r\n//     setEditing(false);\r\n//   };\r\n\r\n//   const onComplete = async (e) => {\r\n//     dispatch(\r\n//       completeChecklistItem({\r\n//         cardId: card._id,\r\n//         complete: e.target.checked,\r\n//         itemId: item._id,\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   const onDelete = async (e) => {\r\n//     dispatch(deleteChecklistItem(card._id, item._id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.checklistItem}>\r\n//       {editing ? (\r\n//         <form onSubmit={(e) => onEdit(e)} className={classes.checklistFormLabel}>\r\n//           <TextField\r\n//             variant='filled'\r\n//             fullWidth\r\n//             multiline\r\n//             required\r\n//             autoFocus\r\n//             value={text}\r\n//             onChange={(e) => setText(e.target.value)}\r\n//             onKeyPress={(e) => e.key === 'Enter' && onEdit(e)}\r\n//           />\r\n//           <div>\r\n//             <Button type='submit' variant='contained' color='primary'>\r\n//               Save\r\n//             </Button>\r\n//             <Button\r\n//               onClick={() => {\r\n//                 setEditing(false);\r\n//                 setText(item.text);\r\n//               }}\r\n//             >\r\n//               <CloseIcon />\r\n//             </Button>\r\n//           </div>\r\n//         </form>\r\n//       ) : (\r\n//         <Fragment>\r\n//           <FormControlLabel\r\n//             control={\r\n//               <Checkbox\r\n//                 checked={\r\n//                   card.checklist.find((cardItem) => cardItem._id === item._id).complete\r\n//                 }\r\n//                 onChange={onComplete}\r\n//                 name={item._id}\r\n//               />\r\n//             }\r\n//             label={item.text}\r\n//             className={classes.checklistFormLabel}\r\n//           />\r\n//           <div className={classes.itemButtons}>\r\n//             <Button className={classes.itemButton} onClick={() => setEditing(true)}>\r\n//               <EditIcon />\r\n//             </Button>\r\n//             <Button color='secondary' className={classes.itemButton} onClick={onDelete}>\r\n//               <HighlightOffIcon />\r\n//             </Button>\r\n//           </div>\r\n//         </Fragment>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// ChecklistItem.propTypes = {\r\n//   item: PropTypes.object.isRequired,\r\n//   card: PropTypes.object.isRequired,\r\n// };\r\n\r\n// export default ChecklistItem;\r\n"]},"metadata":{},"sourceType":"module"}